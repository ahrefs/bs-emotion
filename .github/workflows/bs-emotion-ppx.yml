name: build and release bs-emotion

on:  
  push:
    tags:
      - v*
    branches: 
      - master
        
  pull_request:
    branches:
      - master    

jobs:
  test_and_build:
    name: Test and build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install esy
        run: npm -g install esy@0.5.8
        
      - name: Get esy store path
        id: esy_cache_path
        shell: bash
        run: |
          # COMPUTE THE ESY INSTALL CACHE LOCATION AHEAD OF TIME
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            THE_ESY__CACHE_INSTALL_PATH=$HOME/.esy/3_/i
            THE_ESY__CACHE_INSTALL_PATH=$( cygpath --mixed --absolute "$THE_ESY__CACHE_INSTALL_PATH")
          else
            DESIRED_LEN="86"
            HOME_ESY3="$HOME/.esy/3"
            HOME_ESY3_LEN=${#HOME_ESY3}
            NUM_UNDERS=$(echo "$(($DESIRED_LEN-$HOME_ESY3_LEN))")
            UNDERS=$(printf "%-${NUM_UNDERS}s" "_")
            UNDERS="${UNDERS// /_}"
            THE_ESY__CACHE_INSTALL_PATH=${HOME_ESY3}${UNDERS}/i  
          fi
          echo "THE_ESY__CACHE_INSTALL_PATH: $THE_ESY__CACHE_INSTALL_PATH"
          echo "##[set-output name=path;]$THE_ESY__CACHE_INSTALL_PATH"
          
      - name: Restore esy cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.esy_cache_path.outputs.path }}
          key: v1-esy-${{ matrix.os }}-${{ hashFiles('**/index.json') }}
          restore-keys: |
            v1-esy-${{ matrix.os }}-
      
      - name: esy install and build
        working-directory: bs-emotion-ppx
        run: |                    
          esy install 
          esy build               
          
      - name: bs-emotion-ppx test
        working-directory: bs-emotion-ppx/test
        run: |                    
          esy install
          esy build              
                           
      - name: Retrieve bs-emotion-ppx binary path
        id: bs-emotion-ppx-path
        working-directory: bs-emotion-ppx
        shell: bash
        run: |          
          # converts git/bash posix path to windows path - https://stackoverflow.com/questions/13701218/windows-path-to-posix-path-conversion-in-bash
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            BS_EMOTION_PPX_PATH=$(echo "$(esy x which bs-emotion-ppx)" | sed -e 's/^\///' -e 's/\//\\/g' -e 's/^./\0:/')            
          else
            BS_EMOTION_PPX_PATH=$(echo "$(esy x which bs-emotion-ppx)")
          fi
          BS_EMOTION_PPX_PATH=$(dirname "${BS_EMOTION_PPX_PATH}")
          echo "BS_EMOTION_PPX_PATH: $BS_EMOTION_PPX_PATH"          
          echo "##[set-output name=path;]$BS_EMOTION_PPX_PATH"
      
      - name: Upload artifacts ${{ matrix.os }}        
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: bs-emotion-ppx/_release   
