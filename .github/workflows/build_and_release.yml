name: build and release bs-emotion

on:  
  push:
    tags:
      - v*
    branches: 
      - master
        
  pull_request:
    branches:
      - master    

jobs:      
  build_test_upload_project:
    name: Build, Test and Upload bs-emotion/bs-emotion-ppx on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
          
      - name: "[install esy]"
        run: yarn global add esy@0.5.8      
              
      - name: "[esy store path]"
        id: esy_cache_path
        shell: bash
        run: |
          # COMPUTE THE ESY INSTALL CACHE LOCATION AHEAD OF TIME
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            THE_ESY__CACHE_INSTALL_PATH=$HOME/.esy/3_/i
            THE_ESY__CACHE_INSTALL_PATH=$( cygpath --mixed --absolute "$THE_ESY__CACHE_INSTALL_PATH")
          else
            DESIRED_LEN="86"
            HOME_ESY3="$HOME/.esy/3"
            HOME_ESY3_LEN=${#HOME_ESY3}
            NUM_UNDERS=$(echo "$(($DESIRED_LEN-$HOME_ESY3_LEN))")
            UNDERS=$(printf "%-${NUM_UNDERS}s" "_")
            UNDERS="${UNDERS// /_}"
            THE_ESY__CACHE_INSTALL_PATH=${HOME_ESY3}${UNDERS}/i  
          fi
          echo "THE_ESY__CACHE_INSTALL_PATH: $THE_ESY__CACHE_INSTALL_PATH"
          echo "##[set-output name=path;]$THE_ESY__CACHE_INSTALL_PATH"
      
      - name: "[esy cache]"
        uses: actions/cache@v1
        with:
          path: ${{ steps.esy_cache_path.outputs.path }}
          key: v1-esy-${{ matrix.os }}-${{ hashFiles('**/index.json') }}
          restore-keys: |
            v1-esy-${{ matrix.os }}-
      
      - name: "[bs-emotion]"
        working-directory: bs-emotion
        run: |          
          yarn install
          yarn build
          
      - name: "[bs-emotion-ppx]"
        working-directory: bs-emotion-ppx
        run: |          
          esy install 
          esy build
          
      - name: "[bs-emotion-ppx/test]"
        working-directory: bs-emotion-ppx/test
        run: |
          esy install
          esy build
             
      - name: "[bs-emotion-ppx] esy release"
        working-directory: bs-emotion-ppx
        run: |
          esy release
          
      - name: "[bs-emotion-ppx artifacts ${{ matrix.os }}]"
        uses: actions/upload-artifact@master        
        with:
          name: ${{ matrix.os }}
          path: bs-emotion-ppx/_release
          

  publish:
    needs: build_test_upload_project
    if: github.event_name != 'pull_request'
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"

      - name: Download linux artifacts
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master') && success()
        uses: actions/download-artifact@master
        with:
          name: ubuntu-latest
          path: binaries/linux

      - name: Download macOS artifacts
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master') && success()
        uses: actions/download-artifact@master
        with:
          name: macOS-latest
          path: binaries/darwin

      - name: Download windows artifacts
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master') && success()
        uses: actions/download-artifact@master
        with:
          name: windows-latest
          path: binaries/windows

      - name: Move artifacts
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master') && success()
        run: |
          mkdir -p bin
          mv binaries/darwin/bs-emotion-ppx bin/bs-emotion-ppx-darwin-x64.exe
          mv binaries/windows/bs-emotion-ppx.exe bin/bs-emotion-ppx-win-x64.exe
          mv binaries/linux/bs-emotion-ppx bin/bs-emotion-ppx-linux-x64.exe

      - name: Publish bs-emotion
        working-directory: bs-emotion
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master') && success()
        run: yarn publish        
        env:
          NODE_AUTH_TOKEN: ${{ secrets.YARN_TOKEN }}

